{
 "add_total_row": 0,
 "creation": "2021-01-20 06:36:55.661222",
 "disable_prepared_report": 1,
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "idx": 0,
 "is_standard": "Yes",
 "javascript": "// Copyright (c) 2016, Frappe Technologies Pvt. Ltd. and contributors\n// For license information, please see license.txt\n/* eslint-disable */\n\nfrappe.query_reports[\"Sales Report\"] = {\n\t\"filters\": [\n\t\t{\n\t\t\t\"fieldname\":\"pos_profile\",\n\t\t\t\"label\": __(\"Pos Profile\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"POS Profile\",\n\t\t\t\"width\": \"100\",\n\t\t\t\"reqd\" : 0,\n\t\t},\n\t\t// {\n\t\t// \t\"fieldname\":\"warehouse\",\n\t\t// \t\"label\": __(\"Warehouse\"),\n\t\t// \t\"fieldtype\": \"Link\",\n\t\t// \t\"options\": \"Warehouse\",\n\t\t// \t\"width\": \"100\",\n\t\t// \t\"reqd\" : 1,\n\t\t// },\n\t\t// {\n\t\t// \t\"fieldname\": \"from_date\",\n\t\t// \t\"fieldtype\": \"Date\",\n\t\t// \t\"label\": __(\"From Date\"),\n\t\t// \t\"reqd\" : 1,\n\t\t// \t\"default\": frappe.datetime.get_today()\n\t\t// },\n\t\t{\n\t\t\t\"fieldname\": \"to_date\",\n\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\"label\": __(\"To Date\"),\n\t\t\t\"reqd\" : 1,\n\t\t\t// \"default\": frappe.datetime.get_today()\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"item_code\",\n\t\t\t\"label\": __(\"Item\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Item\",\n\t\t\t\"width\": \"100\",\n\t\t},\n\t]\n};\n",
 "letter_head": "Alfoud Medical Services",
 "modified": "2021-01-20 06:42:11.480694",
 "modified_by": "Administrator",
 "module": "Metactical",
 "name": "Sales Report - Stores",
 "owner": "Administrator",
 "prepared_report": 1,
 "ref_doctype": "Stock Ledger Entry",
 "report_name": "Sales Report - Stores",
 "report_script": "# Copyright (c) 2013, Frappe Technologies Pvt. Ltd. and contributors\n# For license information, please see license.txt\n\nfrom __future__ import unicode_literals\nimport frappe\nfrom frappe import _\nfrom frappe.desk.reportview import build_match_conditions\nfrom frappe.utils import flt, cint, getdate, now, date_diff \n\ndef execute(filters=None):\n\tif not filters:\n\t\tfilters = {}\n\t# filters[\"warehouse\"] = frappe.db.get_value(\"POS Profile\", filters.get(\"pos_profile\"), \"warehouse\")\n\tconditions = get_conditions(filters)\n\tcolumns = get_column()\n\tdata=[]\n\n\topening_closing = get_data(conditions, filters)\n\tfor d in opening_closing:\n\t\trow = {}\n\t\trow['ifw_retailskusuffix'] = d.ifw_retailskusuffix\n\t\trow['item_code'] = d.item_code\n\t\trow['ifw_location'] = d.ifw_location\n\t\trow['item_name'] = d.item_name\n\t\trow['supplier_part_number'] = frappe.db.get_value(\"Item Supplier\", {\"parent\": d.item_code}, \"supplier_part_no\")\n\t\trow['closing'] = frappe.db.get_value(\"Bin\", {\"warehouse\": d.warehouse, \"item_code\": d.item_code}, \"actual_qty\") or 0.0\n\t\treserve = frappe.db.get_value(\"Bin\", {\"warehouse\": d.warehouse, \"item_code\": d.item_code}, \"reserved_qty\") or 0.0\n\t\trow['stock_levels'] = row['closing'] - reserve\n\t\t# row[\"stock_levels\"] = d.warehouse_reorder_level or 0\n\t\trow['retail_price'] = get_item_details(d.item_code, \"Selling\")\n\t\trow['price_list_cost'] = get_item_details(d.item_code, \"Buying\")\n\t\trow['sale'] = d.qty\n\t\trow['pos_profile'] = d.pos_profile\n\t\tdata.append(row)\n\n\treturn columns, data\n\n\ndef get_column():\n\treturn [\n\t\t{\n\t\t\t\"fieldname\":\"ifw_retailskusuffix\",\n\t\t\t\"label\": \"RetailSkuSuffix\",\n\t\t\t\"width\": 120,\n\t\t\t\"fieldtype\": \"Data\",\n\t\t},\n\n\t\t{\n\t\t\t\"fieldname\":\"item_code\",\n\t\t\t\"label\": \"ERPItemNo.\",\n\t\t\t\"width\": 120,\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Item\",\n\t\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"item_name\",\n\t\t\t\"label\": \"ItemName\",\n\t\t\t\"width\": 100,\n\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\n\t\t},\n\n\n\t\t{\n\t\t\t\"fieldname\":\"supplier_part_number\",\n\t\t\t\"label\": \"SupplierSku\",\n\t\t\t\"width\": 150,\n\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\n\t\t},\n\n\n\t\t{\n\t\t\t\"fieldname\":\"sale\",\n\t\t\t\"label\": \"QTYSold\",\n\t\t\t\"fieldtype\": \"Float\",\n\t\t\t\"width\": 80,\n\t\t},\n\n\t\t{\n\t\t\t\"fieldname\":\"closing\",\n\t\t\t\"label\": \"QTYLeft\",\n\t\t\t\"fieldtype\": \"Float\",\n\t\t\t\"width\": 130,\n\t\t},\n\n\t\t{\n\t\t\t\"fieldname\":\"stock_levels\",\n\t\t\t\"label\": \"WHSQty\",\n\t\t\t\"width\": 120,\n\t\t\t\"fieldtype\": \"Float\",\n\t\t},\n\n\t\t{\n\t\t\t\"fieldname\":\"ifw_location\",\n\t\t\t\"label\": \"WHSLocation\",\n\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\"width\": 120,\n\t\t},\n\n\t\t{\n\t\t\t\"fieldname\":\"retail_price\",\n\t\t\t\"label\": \"Price\",\n\t\t\t\"fieldtype\": \"Currency\",\n\t\t\t\"width\": 120,\n\t\t},\n\n\n\t\t{\n\t\t\t\"fieldname\":\"price_list_cost\",\n\t\t\t\"label\": \"CST\",\n\t\t\t\"fieldtype\": \"Currency\",\n\t\t\t\"width\": 130,\n\t\t},\n\n\n\t\t{\n\t\t\t\"fieldname\":\"pos_profile\",\n\t\t\t\"label\": \"POSProfile\",\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"POS Profile\",\n\t\t\t\"width\": 150,\n\t\t},\n\t]\n\n\n\ndef get_data(conditions, filters):\n\tdata = frappe.db.sql(\"\"\"select c.item_code, c.item_name, i.ifw_retailskusuffix, i.ifw_location, c.warehouse, sum(c.qty) as qty,\n\t\tp.pos_profile\n\t\tfrom `tabSales Invoice Item` c inner join `tabSales Invoice` p on p.name = c.parent\n\t\tinner join `tabItem` i on c.item_code = i.name \n\t\twhere p.docstatus = 1 and is_pos =1 and p.posting_date = '{}' {}\n\t\tgroup by 1,7 order by 2,7\n\t\t\"\"\".format(filters.get(\"to_date\"), conditions), as_dict=1)\n\treturn data\n\ndef get_conditions(filters, sales_order=None):\n\tconditions = \"\"\n\tif filters.get(\"item_code\"):\n\t\tconditions += \" and c.item_code = '{}'\".format(filters.get(\"item_code\"))\n\tif filters.get(\"pos_profile\"):\n\t\tconditions += \" and p.pos_profile = '{}'\".format(filters.get(\"pos_profile\"))\n\treturn conditions\n\n\n@frappe.whitelist()\ndef get_item_details(item, list_type=\"Selling\"):\n\tcond = \" and selling = 1\"\n\tif list_type == \"Buying\": cond= \" and buying = 1\"\n\trate = 0\n\tdate = frappe.utils.nowdate()\n\tr = frappe.db.sql(\"select price_list_rate from `tabItem Price` where '{}' between valid_from and valid_upto and item_code = '{}' {} limit 1\".format(date, item, cond))\n\tif r:\n\t\tif r[0][0]:\n\t\t\trate = r[0][0]\n\telse:\n\t\tr = frappe.db.sql(\"select price_list_rate from `tabItem Price` where (valid_from <= '{}' or valid_upto >= '{}') and item_code = '{}' {} limit 1\".format(date, date, item, cond))\n\t\tif r:\n\t\t\tif r[0][0]:\n\t\t\t\trate = r[0][0]\n\t\telse:\n\t\t\tr = frappe.db.sql(\"select price_list_rate from `tabItem Price` where valid_from IS NULL and valid_upto IS NULL and item_code = '{}' {} limit 1\".format(item, cond))\n\t\t\tif r:\n\t\t\t\tif r[0][0]:\n\t\t\t\t\trate = r[0][0]\n\treturn rate",
 "report_type": "Script Report",
 "roles": [
  {
   "role": "Stock User"
  },
  {
   "role": "Accounts Manager"
  }
 ]
}